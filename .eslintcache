[{"/Users/minhchi/Projects/react-theme-builder/src/App.js":"1","/Users/minhchi/Projects/react-theme-builder/src/utils/storage.js":"2","/Users/minhchi/Projects/react-theme-builder/src/index.js":"3"},{"size":1928,"mtime":1610078093219,"results":"4","hashOfConfig":"5"},{"size":252,"mtime":1609909600000,"results":"6","hashOfConfig":"5"},{"size":609,"mtime":1610079403237,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1l082mm",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minhchi/Projects/react-theme-builder/src/App.js",["15"],"import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport WebFont from 'webfontloader';\nimport { GlobalStyles } from './theme/GlobalStyles';\nimport {useTheme} from './theme/useTheme';\n\nimport ThemeSelector from './ThemeSelector';\n\nimport Dialog from './Dialog';\nimport CreateThemeContent from './CreateThemeContent';\n\nconst Container = styled.div`\n  margin: 5px auto 5px auto;\n`;\n\n\nfunction App() {\n  const {theme, themeLoaded, getFonts} = useTheme();\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [showDialog, setShowDialog] = useState(false);\n  const [newTheme, setNewTheme] = useState();\n  \n useEffect(() => {\n    WebFont.load({\n      google: {\n        families: getFonts()\n      }\n    });\n  });\n\n  useEffect(() => {\n    setSelectedTheme(theme);\n  }, [themeLoaded]);\n\n  const manageDialog = () => {\n    setShowDialog(!showDialog);\n  }\n\n  const createTheme = newTheme => {\n    console.log(newTheme);\n    setShowDialog(false);\n    setNewTheme(newTheme);\n  }\n\n  return (\n    <>\n    {\n      themeLoaded && <ThemeProvider theme={ selectedTheme }>\n        <GlobalStyles/>\n        <Container style={{fontFamily: selectedTheme.font}}>\n          <h1>Theming System</h1>\n          <p>\n            Hey, There! It's great when the control is with you. The theming system\n            helps you in building a theme of your choice and apply it to test live. Why\n            wait? Just give it a try.\n          </p>\n          <button className=\"btn\" onClick={ manageDialog }>Create a Theme</button>\n          <Dialog \n            header=\"Create a Theme\"\n            body={ <CreateThemeContent create={ createTheme }/> }\n            open={ showDialog } \n            callback = { manageDialog }/>\n          <ThemeSelector setter={ setSelectedTheme } newTheme={ newTheme }/>\n        </Container>\n      </ThemeProvider>\n    }\n    </>\n  );\n}\n\nexport default App;\n","/Users/minhchi/Projects/react-theme-builder/src/utils/storage.js",[],"/Users/minhchi/Projects/react-theme-builder/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":33,"column":6,"nodeType":"18","endLine":33,"endColumn":19,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [theme, themeLoaded]",{"range":"23","text":"24"},[837,850],"[theme, themeLoaded]"]